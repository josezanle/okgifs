{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","class","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gOAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAkBlC,OACO,0BAAMC,SAZA,SAACC,GAClBA,EAAEC,iBACMJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAUF,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBE,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,YA2B3BZ,EAAYe,WAAa,CACzBd,c,OAAce,EAAUC,KAAKC,Y,2BCpCnBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAT1B,kBAaTM,GAbS,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE5B,OACI,yBAAKc,UAAU,8CACZ,yBACCC,IAAKf,EACLgB,IAAKN,IAEN,2BAAIA,KCLNO,EAAU,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAAa,ECAV,SAAEA,GAAa,IAAD,EAIhBlB,mBAAS,CACnCyB,KAAK,GACLa,SAAQ,IANkC,mBAInCC,EAJmC,KAI5BC,EAJ4B,KA+B1C,OAtBAC,qBACI,WAEJxB,EAAQC,GACHwB,MAAK,SAAAd,GAEFe,YAAY,WAGRH,EAAS,CACLf,KAAKG,EACLU,SAAQ,MAEd,WAIJ,CAACpB,IAKAqB,ED7B2BK,CAAc1B,GAAhCa,EAFsB,EAE3BN,KAAYa,EAFe,EAEfA,QAEnB,OACI,6BACQ,wBAAIJ,UAAU,wCAAyChB,GAElDoB,GAAW,uBAAGO,MAAM,4CAAT,WAER,yBAAKX,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAkB,IAAKlB,EAAIC,IACLD,UEd3BmB,EAAe,WAAO,IAAD,EAEM/C,mBAAS,CAAC,mBAFhB,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAK9B,OAEQ,6BACI,wBAAImC,UAAU,uDAAd,aACA,kBAAC,EAAD,CAAanC,cAAkBA,IAC/B,yFACA,6BACA,4BAEQiD,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA4B,IAAO5B,EACPA,SAAaA,U,MCdzC+B,IAASC,OAEL,kBACA,EADA,MAEAC,SAASC,eAAe,W","file":"static/js/main.a59228a8.chunk.js","sourcesContent":["import React , { useState }from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories})=>{\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault ()\r\n            if (inputValue.trim().length > 2 ){\r\n            setCategories (cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n                \r\n            }\r\n\r\n    }\r\n\r\n\r\n            return (\r\n                   <form onSubmit={ handleSubmit }>\r\n                        \r\n                        <input \r\n                            type='text' \r\n                            value= {inputValue} \r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                   </form>\r\n\r\n            )\r\n\r\n}\r\n    AddCategory.prototypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","export  const getGifs = async ( category) => {\r\n\r\n         const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=nTPAFgg6e85GvsefkJz7DlugTbmqZWrD`;\r\n         const resp = await fetch(url);\r\n         const {data} = await resp.json();\r\n         const gifs = data.map(img => {\r\n             return {\r\n                 id:img.id,\r\n                 title:img.title,\r\n                 url:img.images?.downsized_medium.url\r\n             }\r\n         })\r\n\r\n        return gifs;\r\n     }","import React from 'react';\r\n export const GifGridItem = ({title,url}) => {\r\n\r\n        return (\r\n            <div className=\"card animate__animated animate__fadeInLeft\">\r\n               <img \r\n                src={url} \r\n                alt={title}\r\n                />\r\n               <p>{title}</p>\r\n            </div>\r\n        )\r\n }","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category})=> {\r\n\r\n    const {data:images,loading} = useFetchGifs( category);\r\n       \r\n    return (\r\n        <div>\r\n                <h3 className='animate__animated animate__headShake'>{ category }</h3>\r\n\r\n                    {loading && <p class='animate__animated animate__fadeInDownBig'>Loading</p>}\r\n\r\n                        <div className=\"card-grid\">\r\n                            {\r\n                                images.map( img =>(\r\n                                    <GifGridItem \r\n                                    key={img.id}\r\n                                    {...img} \r\n                                    />\r\n                                ))                \r\n\r\n                            }\r\n                        </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category)=> {\r\n\r\n\r\n\r\nconst [state, setState] = useState({\r\ndata:[],\r\nloading:true\r\n\r\n});\r\nuseEffect(\r\n    () =>{\r\n\r\ngetGifs(category)\r\n    .then(img =>{\r\n\r\n        setTimeout( () => {\r\n\r\n\r\n            setState({\r\n                data:img,\r\n                loading:false\r\n            })\r\n        },1500);\r\n\r\n    })\r\n\r\n    },[category]\r\n)\r\n\r\n\r\n\r\nreturn state\r\n}\r\n\r\n","import React, { useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['por ej. Homero']);\r\n\r\n\r\n    return (\r\n\r\n            <div>\r\n                <h1 className='animate__animated animate__bounce animate__repeat-2'>Ok Gifs !</h1>\r\n                <AddCategory setCategories = { setCategories} />\r\n                <p>Busca una Imagen GIF y descargala , Es totalmente GRATIS !</p>\r\n                <hr/>\r\n                <ol>\r\n                    {\r\n                        categories.map( category => (\r\n                            <GifGrid \r\n                            key= { category}\r\n                            category = { category } />\r\n                        ))\r\n                    }\r\n\r\n                </ol>\r\n            </div>\r\n        )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\n\n\n\nimport './index.css';\n\nReactDOM.render(\n\n    <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}